name: üè≠ Windows Build Pipeline

on:
  push:
    tags: ['v*']
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  WIN_TARGET: x86_64-pc-windows-msvc  # Centralized configuration

jobs:
  build:
    name: üñ•Ô∏è Windows Build
    runs-on: windows-latest
    outputs:
      version: ${{ steps.extract_version.outputs.tag }}

    steps:
      - name: üì¶ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for tag detection

      - name: üè∑Ô∏è Extract Version Tag
        id: extract_version
        shell: bash
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "version=${TAG}" >> $GITHUB_OUTPUT
          echo "‚ÑπÔ∏è Building version: ${TAG}"

      - name: ü¶Ä Rust Setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ env.WIN_TARGET }}

      - name: üîß Build
        shell: pwsh
        run: |
          cargo build --release --target $env:WIN_TARGET
          New-Item -ItemType Directory -Path release -Force
          Copy-Item "target/$env:WIN_TARGET/release/smtp2tg.exe" release/
          Get-ChildItem release

      - name: üîê Checksum
        shell: pwsh
        run: |
          $hash = (Get-FileHash "release/smtp2tg.exe" -Algorithm SHA256).Hash.ToLower()
          "${hash} *smtp2tg.exe" | Out-File -Encoding ASCII "release/smtp2tg-${{ env.WIN_TARGET }}.sha256"
          Get-Content "release/smtp2tg-${{ env.WIN_TARGET }}.sha256"

      - name: ‚¨ÜÔ∏è Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: smtp2tg-${{ env.WIN_TARGET }}
          path: |
            release/smtp2tg.exe
            release/smtp2tg-${{ env.WIN_TARGET }}.sha256

  release:
    name: üöÄ Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: üì• Download
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: smtp2tg-*
          merge-multiple: false

      - name: ‚úÖ Verify
        shell: bash
        run: |
          cd "artifacts/smtp2tg-${{ env.WIN_TARGET }}"
          sha256sum -c *.sha256

      - name: üì¶ Package
        shell: bash
        run: |
          mkdir -p release_assets
          cp -v "artifacts/smtp2tg-${{ env.WIN_TARGET }}"/* release_assets/
          cd release_assets
          zip -9 -T "smtp2tg-${{ env.WIN_TARGET }}.zip" smtp2tg.exe
          ls -lh

      - name: üè∑Ô∏è Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.build.outputs.version }}
          files: |
            release_assets/smtp2tg-${{ env.WIN_TARGET }}.zip
            release_assets/smtp2tg-${{ env.WIN_TARGET }}.sha256
