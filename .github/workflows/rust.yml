name: Build and Release

on:
  push:
    tags: ['v*']
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: 
          - { rust_target: 'x86_64-unknown-linux-gnu', clean_name: 'x86_64-linux' }
          - { rust_target: 'aarch64-unknown-linux-gnu', clean_name: 'arm64-linux' }
    
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target.rust_target }}
          components: rust-src

      - name: Setup cross-compilation
        if: matrix.target.rust_target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu libc6-dev-arm64-cross
          rustup target add aarch64-unknown-linux-gnu

      - name: Build release binary
        run: |
          if [ "${{ matrix.target.rust_target }}" = "aarch64-unknown-linux-gnu" ]; then
            export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          fi
          cargo build --release --target ${{ matrix.target.rust_target }}
          mkdir -p dist
          cp target/${{ matrix.target.rust_target }}/release/smtp2tg dist/smtp2tg-${{ matrix.target.clean_name }}

      - name: Create checksum
        run: |
          cd dist
          sha256sum smtp2tg-${{ matrix.target.clean_name }} > smtp2tg-${{ matrix.target.clean_name }}.sha256

      - name: Compress artifacts
        run: |
          cd dist
          tar -czvf smtp2tg-${{ matrix.target.clean_name }}.tar.gz smtp2tg-${{ matrix.target.clean_name }} smtp2tg-${{ matrix.target.clean_name }}.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: smtp2tg-${{ matrix.target.clean_name }}
          path: dist/smtp2tg-${{ matrix.target.clean_name }}.tar.gz
          retention-days: 1

  create-release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: smtp2tg-*.tar.gz
          merge-multiple: true

      - name: Move artifacts to root directory
        run: |
          # Move files from their subdirectories to the artifacts root
          find artifacts -name '*.tar.gz' -exec mv {} artifacts/ \;
          find artifacts -name '*.sha256' -exec mv {} artifacts/ \;
          # Remove empty subdirectories
          find artifacts -type d -empty -delete

      - name: List downloaded artifacts
        run: ls -la artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            Pre-built binaries for ${{ github.ref_name }}
            SHA256 Checksums:
            ```
            $(cat artifacts/*.sha256 || echo "No checksums found")
            ```
          files: |
            artifacts/smtp2tg-*.tar.gz
          draft: false
          prerelease: false
